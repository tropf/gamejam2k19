[gd_scene load_steps=5 format=2]

[ext_resource path="res://assets/graphics/ball.svg" type="Texture" id=1]

[sub_resource type="PhysicsMaterial" id=1]
bounce = 1.0

[sub_resource type="GDScript" id=2]
script/source = "extends RigidBody2D

signal hit

# Called when the node enters the scene tree for the first time.
func _ready():
	Global.gravityobjects.append(self)
	set_continuous_collision_detection_mode(CCD_MODE_CAST_SHAPE)

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _physics_process(delta):
	#set_applied_force(Vector2(100, 100))
	var force = Vector2(0, 0)
	# Apply each force
	for i in Global.gravityobjects:
		#applied_force = (Global.gravity * (mass * i.get_node(\"RigidBody2D\").get_mass()) * delta)
		if is_other_obj(i):
			force += i.mass * calc_force_btw_obj(i)
	#print(\"Force: \", force)
	set_applied_force(delta * force)
	
func calc_force_btw_obj(ball):
	var dist = euclidian_distance(ball)
	return -1 * get_direction(ball) * Global.gravity/pow(dist, 1.5)
	
func euclidian_distance(ball):
	return sqrt(pow(self.position.x - ball.position.x, 2) + pow(self.position.y - ball.position.y, 2))
	
func get_direction(ball):
	return (self.position - ball.position).normalized()
	
func is_other_obj(ball):
	return self != ball

func _on_Ball_body_entered(body):
	emit_signal(\"hit\", body)
	print(\"the ball hit\", body)
"

[sub_resource type="CircleShape2D" id=3]
radius = 210.238

[node name="Ball" type="RigidBody2D"]
mass = 10.0
physics_material_override = SubResource( 1 )
contacts_reported = 100
contact_monitor = true
script = SubResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
scale = Vector2( 0.05, 0.05 )
shape = SubResource( 3 )

[node name="Sprite" type="Sprite" parent="CollisionShape2D"]
scale = Vector2( 13, 13 )
texture = ExtResource( 1 )
[connection signal="body_entered" from="." to="." method="_on_Ball_body_entered"]
